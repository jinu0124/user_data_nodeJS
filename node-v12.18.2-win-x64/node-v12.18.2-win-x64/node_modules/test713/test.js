var http = require('http');
var fs = require('fs');
const path = require('path'); // path.join 사용을 위함
const express = require('express'); // nodejs express 사용
const app = express();

const router = express.Router();
const engine = require('ejs-locals'); // npm install ejs-locals
const routes = require('./routes'); // Router

//// [express Router()], router.get or post 사용해서 SQL 조회하고 값 Routing 하는 법 공부하기
//var mariadb_con = require('./routes/mariadb_conn.js')();
//
//var connection = mariadb_con.init();
//
//mariadb_con.test_open(connection);

//req : 응답, res : 보내는 결과
//router.post('/test1', function(req, res){
//	var sql = 'select * from user;';
//	connection.query(sql, function (error, rows, fields){
//		if(!error){
//			for (var i = 0; i < rows.length; i++)
//				{
//				console.log(rows[i]);
//				}
//		}
//		else{
//			console.log('query error : ' + error);
//		}
//	})
//})

//module.exports = router;



global.info_dict = new Object(); // global 변수 info_dict 선언 << 현재 로그인 된 회원정보를 갖고 있다.

app.engine('ejs', engine); //ejs template engine 사용
app.set('views', './views'); // views 라는 directory를 만들어서 해당 dir 내에 .ejs(html과 같음) 파일 사용
app.set('view engine', 'ejs'); // ejs template engine 사용 (이외에 pug(jade) 등 있음.)
app.locals.pretty = true;

//router 사용법 확실히 공부하기
//module.exports = router;

//app.get('/')을 사용하여 페이지 첫 시작 시 views의 index.ejs를 렌더링해서 보여주게 한다.
app.get('/', function(req, res){
	res.render('index');
});

app.use(express.static(path.join(__dirname, 'views'))); // views 폴더의 파일을 사용하기 위해
// + 시작 시에 views 폴더의 index.html 수행하게 된다.

app.use(express.json()); 
app.use(express.urlencoded());

// html 파일에서 <form action='test'>로 보낸 값을 /routes/test1.js 파일을 통해서
// 원하는 file로 정보 (Data)를 전송할 수 있게 된다. app.get -> get 방식 일때 get함수 사용, app.post -> post 방식일 때
//app.get('/logon', require('./routes/test1').get); // /routes/test1.js로 던진다. (URL은 /test 로 사용된다.)
app.post('/logon', require('./routes/test1').post); // login을 위해 사용자 정보 체크
app.post('/index', require('./routes/init_display').post); // 비밀번호 틀릴 시 초기 화면으로 이동.

app.post('/register', require('./routes/register_form').post);// 회원가입
app.get('/table_make', require('./routes/table_make').get);

app.post('/check_id', require('./routes/check_id').post); // ID 중복 확인

app.post('/register_check', require('./routes/register_check').post); // 회원 등록

app.get('/find_pw', require('./routes/find_pw').get); // find_pw
app.post('/find_pws', require('./routes/find_pw').post); // find_pw DB check

app.get('/user_info', require('./routes/user_info').get); // car 정보
app.get('/enrolled_car', require('./routes/enrolled_car').get); // 회원에게 등록된 car 정보
app.get('/withdraw', require('./routes/withdraw').get); // 회원 탈퇴
app.post('/withdraw_check', require('./routes/withdraw_check').post); // 회원 탈퇴 비밀번호 체크 후 탈퇴 마무리

//app.get('/user_info', function(req, res){
//	console.log("in test.js");
//	res.render('user_info');
//});

// pug(Jade) 사용 시 <- engine을 ejs가 아닌 pug로 교체하여주어야 한다.
app.get('/template', function(req, res){
	res.render('temp', {time:Date()}); // views의 temp.pug 파일을 렌더링하여 띄움
});

app.listen(3040, function(){
	console.log('Express App on port 3040');
});
